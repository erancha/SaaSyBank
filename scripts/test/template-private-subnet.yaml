AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to set up ECS Fargate in a private subnet with required VPC endpoints for ECR.

Parameters:
  EcrImageUri:
    Type: String
    Description: Name of the banking service image in the ECR repository

Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  MyPrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: MyPrivateSubnet

  MyRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC

  MyPrivateSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref MyPrivateSubnet
      RouteTableId: !Ref MyRouteTable

  # Security Group for ECS Tasks
  MySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allow outbound access for ECS Fargate'
      VpcId: !Ref MyVPC
      SecurityGroupIngress: []
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0

  MyECRAPIVPCEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: !Ref MyVPC
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.api'
      VpcEndpointType: Interface
      SecurityGroupIds:
        - !Ref MySecurityGroup
      SubnetIds:
        - !Ref MyPrivateSubnet
      PrivateDnsEnabled: true
  MyECRDKRVPCEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: !Ref MyVPC
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.dkr'
      VpcEndpointType: Interface
      SecurityGroupIds:
        - !Ref MySecurityGroup
      SubnetIds:
        - !Ref MyPrivateSubnet
      PrivateDnsEnabled: true
  MyS3VPCEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: !Ref MyVPC
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcEndpointType: Gateway

  MyECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: MyECSCluster

  MyTaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'ecs-tasks.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: MyECSExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                  - 's3:GetObject'
                Resource: '*'

  MyFargateTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: MyTaskDefinition
      NetworkMode: awsvpc
      Memory: '512' # Ensure this is a string
      Cpu: '256' # Ensure this is a string
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: MyContainer
          Image: !Ref EcrImageUri
          Essential: true
      ExecutionRoleArn: !GetAtt MyTaskExecutionRole.Arn

  MyECSFargateService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref MyECSCluster
      TaskDefinition: !Ref MyFargateTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref MyPrivateSubnet
          SecurityGroups:
            - !Ref MySecurityGroup
          AssignPublicIp: DISABLED

Outputs:
  VPCId:
    Description: 'VPC ID'
    Value: !Ref MyVPC
  PrivateSubnetId:
    Description: 'Private Subnet ID'
    Value: !Ref MyPrivateSubnet
  ECSClusterName:
    Description: 'ECS Cluster Name'
    Value: !Ref MyECSCluster
  FargateServiceName:
    Description: 'Fargate Service Name'
    Value: !Ref MyECSFargateService
